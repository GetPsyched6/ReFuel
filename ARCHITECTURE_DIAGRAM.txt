ReFuel - Competitive Intelligence Platform Architecture
=======================================================

LAYER 1: DATA COLLECTION
-------------------------
┌─────────────────────────────────────────────────┐
│  Web Scrapers (Selenium + Stealth)             │
│  ┌──────────┐ ┌───────────┐ ┌──────────┐      │
│  │   UPS    │ │  FedEx    │ │   DHL    │      │
│  │ Website  │ │  Website  │ │ Website  │      │
│  └──────────┘ └───────────┘ └──────────┘      │
│       ↓              ↓             ↓            │
│  Fuel Surcharge % Tables (Ground Shipping)     │
└─────────────────────────────────────────────────┘
                    ↓
            (Scraped JSON Data)
                    ↓

LAYER 2: DATA STORAGE & PROCESSING
-----------------------------------
┌─────────────────────────────────────────────────┐
│           SQLite Database                       │
│  ┌───────────────────────────────────────┐     │
│  │ Tables:                               │     │
│  │ • scrape_sessions (timestamp, status) │     │
│  │ • fuel_surcharges (carrier, ranges,  │     │
│  │   at_least_usd, surcharge_pct)       │     │
│  │ • ai_insights (cached AI analysis)    │     │
│  └───────────────────────────────────────┘     │
│                                                 │
│  Data Processing Services:                     │
│  • Comparison Service (3 views):               │
│    - Overlap View (common ranges)              │
│    - Normalized Grid ($0.25 intervals)         │
│    - Comparable Ranges (grouped overlaps)      │
│  • Historical Trends (weekly tracking)         │
└─────────────────────────────────────────────────┘
                    ↓
          (Processed Comparison Data)
                    ↓

LAYER 3: AI/ML LAYER
---------------------
┌─────────────────────────────────────────────────┐
│    IBM Watsonx AI (Llama 3.3 70B)              │
│  ┌───────────────────────────────────────┐     │
│  │  REST API (Direct httpx calls)        │     │
│  │  • Token Manager (IAM auth, 24h)      │     │
│  │  • Aggressive JSON parsing            │     │
│  │  • Fallback strategies                │     │
│  └───────────────────────────────────────┘     │
│                                                 │
│  AI Services:                                  │
│  1. Executive Analysis                         │
│     → Strategic insights, opportunities,       │
│       risks, trends                            │
│  2. Intelligent Chatbot                        │
│     → Query detection, context-aware           │
│       responses, conversation memory           │
│  3. Real-Time Insights                         │
│     → Competitive positioning, key metrics     │
└─────────────────────────────────────────────────┘
                    ↓
            (AI-Generated Insights)
                    ↓

LAYER 4: BACKEND API
--------------------
┌─────────────────────────────────────────────────┐
│       FastAPI Backend (Python)                  │
│  ┌───────────────────────────────────────┐     │
│  │  API Routes:                          │     │
│  │  • /api/scraper/scrape (manual)       │     │
│  │  • /api/comparison (3 view modes)     │     │
│  │  • /api/history (sessions, trends)    │     │
│  │  • /api/ai/insights                   │     │
│  │  • /api/ai/executive-analysis         │     │
│  │  • /api/ai/chat                       │     │
│  └───────────────────────────────────────┘     │
│                                                 │
│       MCP Server (Model Context Protocol)      │
│  ┌───────────────────────────────────────┐     │
│  │  Port 3001                            │     │
│  │  • Exposes data tools for AI agents   │     │
│  │  • Compatible with agent frameworks   │     │
│  └───────────────────────────────────────┘     │
└─────────────────────────────────────────────────┘
                    ↓
              (REST API + MCP)
                    ↓

LAYER 5: FRONTEND (UI)
----------------------
┌─────────────────────────────────────────────────┐
│   React + TypeScript + Vite Frontend           │
│  ┌───────────────────────────────────────┐     │
│  │  Premium UI Components:               │     │
│  │  • Glassmorphism cards                │     │
│  │  • Dark/Light mode toggle             │     │
│  │  • Framer Motion animations           │     │
│  │  • Recharts visualizations            │     │
│  │  • Custom dropdown selectors          │     │
│  │  • Sticky table headers               │     │
│  └───────────────────────────────────────┘     │
│                                                 │
│  Dashboard Features:                           │
│  1. Welcome Header (time-aware greeting)       │
│  2. AI Insights Card (latest analysis)         │
│  3. Executive Analysis (comprehensive)         │
│  4. Comparison Tables + Charts (3 views)       │
│  5. Historical Trends Visualization            │
│  6. Scrape Now Button (demo feature)           │
│  7. Intelligent Chatbot (sidebar)              │
│  8. Session Selector (view past data)          │
└─────────────────────────────────────────────────┘

USER INTERACTION FLOW
=====================
User → Dashboard → View Data (3 comparison modes)
              ↓
     Select Historical Session
              ↓
     Scrape Now (on-demand)
              ↓
     View AI Insights + Executive Analysis
              ↓
     Chat with AI about data
              ↓
     Export insights (future feature)


DATA FLOW (SIMPLIFIED)
======================
Websites → Scraper → SQLite → Comparison Service → API → Frontend
                         ↓
                    AI Service (Watsonx)
                         ↓
                    Insights + Chat
                         ↓
                     Frontend Display


KEY TECHNOLOGIES
================
• Backend: Python, FastAPI, asyncio, aiosqlite
• Frontend: React, TypeScript, Vite, Tailwind CSS
• UI: Framer Motion, Recharts, Radix UI, Lucide Icons
• Scraping: Selenium WebDriver, stealth techniques
• Database: SQLite (lightweight, file-based)
• AI: IBM Watsonx (Llama 3.3 70B), REST API
• MCP: Python MCP library (for agent integration)
• Deployment: Localhost (demo), scalable to cloud


SECURITY & RELIABILITY
======================
• Environment variables (.env) for API keys
• Token refresh every 24h (Watsonx IAM)
• Stealth scraping (bypass bot detection)
• Error handling & fallback strategies
• Conversation memory (in-memory sessions)
• Data validation (Pydantic schemas)


FUTURE ENHANCEMENTS
===================
• Cron job for weekly auto-scraping
• Email notifications on data changes
• Predictive analytics (rate forecasting)
• Export reports (PDF/Excel)
• Alert system for competitive threats
• Multi-user authentication
• Cloud deployment (AWS/Azure/GCP)

